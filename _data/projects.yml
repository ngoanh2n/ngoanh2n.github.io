- layout: top-middle
  name: WebDriverChecker
  link: https://mvnrepository.com/artifact/com.github.ngoanh2n/webdriverchecker
  github: ngoanh2n/webdriverchecker
  quote: Built as a dependency with Java to check Selenium WebDriver characteristics and environment.
  description: |
    You are writing automation test scripts for multiple browsers such as:
    - Chrome, Safari.. on PC
    - Safari & native application on iOS
    - Chrome & native application on Android
    
    And somewhere, you have to check type of browser or platform to navigate your scripts.
    Use `WebDriverChecker` to make it more convenient!
    It able to check:
    - Browser: Chrome, Firefox, Edge, Opera, Safari, IE
    - Platform: MacOS, Linux, Windows, iOS, Android
    - State: Alive, Local, Remote, Web, Native, Docker, Virtual Device, Cloud

    Example:
    ```
    boolean result = WebDriverChecker.isEdge(..);
    boolean result = WebDriverChecker.isIOS(..);
    boolean result = WebDriverChecker.isDocker(..);
    boolean result = WebDriverChecker.isMobileVirtual(..);
    ```

- layout: top-middle
  name: Image Comparator
  link: https://mvnrepository.com/artifact/com.github.ngoanh2n/image-comparator
  github: ngoanh2n/image-comparator
  quote: Built as a dependency with Java to compare 2 image files.
  description: |
    Example:
    ```java
    ImageComparisonOptions options = ImageComparisonOptions
        .builder()
        .allowedDeviation(0.05)         // Default to 0.0
        .diffColor(Color.CYAN)          // Default to Color.RED
        .build();
    ImageComparisonResult result = ImageComparator.compare(expectedImage, actualImage, options);
    ```

- layout: top-middle
  name: CSV Comparator
  link: https://mvnrepository.com/artifact/com.github.ngoanh2n/csv-comparator
  github: ngoanh2n/csv-comparator
  quote: Built as a dependency with Java to compare 2 CSV files.
  description: |
    Example: CSV is formatted columns `[id,email,firstname,lastname,age,note]`
    ```
    CsvComparisonOptions options = CsvComparisonOptions
        .builder()
        .selectColumns("email", "firstname", "lastname")
        .selectColumnId("email")
        //.selectColumns(1, 2, 3)
        //.selectColumnId(1)
        .build();
    CsvComparisonResult result = CsvComparator.compare(expectedCsvFile, actualCsvFile, options);
    ```
